---
/**
 * ComparisonTableRow Component
 * Single Responsibility: Display a single row in the casino comparison table
 */

import { AdvancedRating } from '../Rating/AdvancedRating';

interface Props {
  rowData: {
    rank: number;
    casino: {
      name: string;
      slug: string;
      logo?: string;
      domain: string;
    };
    rating: {
      overall: number;
      display: string;
      tier: string;
      ratingData: {
        overall: number;
        trust: number;
        bonuses: number;
        games: number;
        support: number;
        payout: number;
      };
    };
    bonus: {
      display: string;
      amount?: string;
      percentage?: number;
      wagering?: string;
      highlight: boolean;
    };
    payout: string;
    cta: {
      text: string;
      href: string;
      variant: string;
    };
    styling: {
      badgeClass: string;
      rowClass: string;
      isTopRank: boolean;
    };
    isTop3: boolean;
  };
}

const { rowData } = Astro.props;
---

<tr class={`border-b transition-all duration-200 ${rowData.styling.rowClass} hover:bg-blue-50 hover:shadow-md`}>
  <!-- Rank -->
  <td class="py-4 px-2 lg:py-6 lg:px-6 text-center">
    <div class={`w-6 h-6 lg:w-10 lg:h-10 rounded-full flex items-center justify-center font-bold mx-auto text-sm lg:text-lg text-white ${rowData.styling.badgeClass}`}>
      {rowData.rank}
    </div>
  </td>

  <!-- Casino Name & Info -->
  <td class="py-4 px-2 lg:py-6 lg:px-6">
    <div class="flex items-center min-w-0">
      {rowData.casino.logo && (
        <img 
          src={rowData.casino.logo} 
          alt={`${rowData.casino.name} logo`} 
          class="w-8 h-8 lg:w-12 lg:h-12 object-contain rounded-lg mr-2 lg:mr-3 flex-shrink-0"
        />
      )}
      <div class="min-w-0 flex-1">
        <div class="font-bold text-white text-sm lg:text-lg truncate">{rowData.casino.name}</div>
        <div class="text-xs lg:text-sm text-gray-400 truncate">{rowData.casino.domain}</div>
        {rowData.isTop3 && (
          <div class="text-xs bg-gradient-to-r from-primary-100 to-primary-200 text-primary-800 px-2 py-1 rounded-full inline-block mt-1">
            ⭐ Top Pick
          </div>
        )}
      </div>
    </div>
  </td>

  <!-- Rating -->
  <td class="py-4 px-1 lg:py-6 lg:px-4 text-center">
    <div class="flex flex-col items-center">
      <span class="font-bold text-lg lg:text-2xl text-yellow-600">{rowData.rating.display}</span>
      <div class="flex mt-1">
        {[1, 2, 3, 4, 5].map(star => (
          <svg class={`w-3 h-3 lg:w-4 lg:h-4 ${star <= Math.floor(rowData.rating.overall) ? 'text-yellow-400' : 'text-gray-300'}`} fill="currentColor" viewBox="0 0 20 20">
            <path d="M9.049 2.927C9.3 2.179 10.7 2.179 10.951 2.927L12.3 6.64a1 1 0 00.947.691H17c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118L15.69 15.9c.282.748-.61 1.37-1.296.9l-2.8-2.034a1 1 0 00-1.175 0L7.606 16.8c-.686.47-1.578-.152-1.296-.9l1.267-3.607a1 1 0 00-.364-1.118L4.412 9.14C3.63 8.58 4.032 7.33 5 7.33h3.753a1 1 0 00.947-.69L9.049 2.927z" />
          </svg>
        ))}
      </div>
      <div class="text-xs text-gray-500 mt-1">{rowData.rating.tier}</div>
    </div>
  </td>

  <!-- Payout Speed -->
  <td class="py-4 px-1 lg:py-6 lg:px-4 text-center">
    <div class="text-xs lg:text-sm font-medium text-gray-700">
      {rowData.payout}
    </div>
  </td>

  <!-- Bonus -->
  <td class="py-4 px-1 lg:py-6 lg:px-4 text-center">
    <div class="text-xs lg:text-sm">
      <div class={`font-semibold ${rowData.bonus.highlight ? 'text-green-700' : 'text-gray-700'}`}>
        {rowData.bonus.display}
      </div>
      {rowData.bonus.wagering && (
        <div class="text-xs text-gray-500 mt-1">
          {rowData.bonus.wagering} wagering
        </div>
      )}
    </div>
  </td>

  <!-- Action Button -->
  <td class="py-4 px-2 lg:py-6 lg:px-6 text-center">
    <div class="flex flex-col items-center space-y-1 lg:space-y-2">
      <a 
        href={rowData.cta.href}
        target="_blank" 
        rel="noopener noreferrer"
        class={`inline-block px-3 py-1 lg:px-4 lg:py-2 rounded-lg font-bold text-xs lg:text-sm transition-all transform hover:scale-105 ${
          rowData.cta.variant === 'primary' 
            ? 'bg-gradient-to-r from-primary-500 to-primary-700 text-white hover:shadow-lg' 
            : 'bg-white text-primary-600 border-2 border-primary-500 hover:bg-primary-50'
        }`}
      >
        {rowData.cta.text}
      </a>
      <a 
        href={`/reviews/${rowData.casino.slug}`}
        class="text-xs text-gray-500 hover:text-primary-600 transition-colors"
      >
        Review →
      </a>
    </div>
  </td>
</tr>